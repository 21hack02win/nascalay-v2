// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file api/proto/v2/room.proto (package api.proto.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Room_RoomShape } from "./schema_pb.js";

/**
 * @generated from message api.proto.v2.RoomServiceCreateRequest
 */
export class RoomServiceCreateRequest extends Message<RoomServiceCreateRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: int32 capacity = 2;
   */
  capacity = 0;

  /**
   * @generated from field: api.proto.v2.Room.RoomShape shape = 3;
   */
  shape = Room_RoomShape.ROOM_SHAPE_UNSPECIFIED;

  /**
   * @generated from field: int32 time_limit_seconds = 4;
   */
  timeLimitSeconds = 0;

  constructor(data?: PartialMessage<RoomServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.proto.v2.RoomServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "capacity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "shape", kind: "enum", T: proto3.getEnumType(Room_RoomShape) },
    { no: 4, name: "time_limit_seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomServiceCreateRequest {
    return new RoomServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomServiceCreateRequest {
    return new RoomServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomServiceCreateRequest {
    return new RoomServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RoomServiceCreateRequest | PlainMessage<RoomServiceCreateRequest> | undefined, b: RoomServiceCreateRequest | PlainMessage<RoomServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(RoomServiceCreateRequest, a, b);
  }
}

/**
 * @generated from message api.proto.v2.RoomServiceCreateResponse
 */
export class RoomServiceCreateResponse extends Message<RoomServiceCreateResponse> {
  /**
   * @generated from field: string room_id = 1;
   */
  roomId = "";

  constructor(data?: PartialMessage<RoomServiceCreateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "api.proto.v2.RoomServiceCreateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "room_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoomServiceCreateResponse {
    return new RoomServiceCreateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoomServiceCreateResponse {
    return new RoomServiceCreateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoomServiceCreateResponse {
    return new RoomServiceCreateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RoomServiceCreateResponse | PlainMessage<RoomServiceCreateResponse> | undefined, b: RoomServiceCreateResponse | PlainMessage<RoomServiceCreateResponse> | undefined): boolean {
    return proto3.util.equals(RoomServiceCreateResponse, a, b);
  }
}

